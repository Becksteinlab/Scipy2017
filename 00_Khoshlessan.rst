:author: Mahzad Khoshlessan
:email: mkhoshle@asu.edu
:institution: Arizona State University
:corresponding:

:author: Oliver Beckstein
:email: obeckste@asu.edu 
:institution: Arizona State University 

------------------------------------------------
A Benchmark Suite for Measuring Parallel Computing Performance in MDAnalysis Library
------------------------------------------------

.. class:: abstract

MDAnalysis is a Python library that provides users with access to raw simulation data that allows structural and temporal analysis of molecular dynamics (MD) trajectories generated by all major MD simulation packages.
The size of these trajectories is growing as the simulation times is being extended from micro-seconds to mili-seconds.
Therefore, there is a need for high performance computing (HPC) approaches to increase the throughput.
MDAnalysis does not yet provide a standard interface for parallel analysis; instead, various existing parallel libraries are currently used to parallelize MDAnalysis-based code.
However, a standardized benchmark suite that focuses on helping users evaluate the performance of the MDAnalysis library is not available in the current community.
Present study aims to identify possible approaches for bringing HPC into MDAnalysis.
In this paper, we present a benchmark suite that can be used to evaluate performance for parallel map-reduce type analysis along with the Dask library for task-graph based distributed computing.                       
A range of commonly used MD file formats (CHARMM/NAMD DCD, Gromacs XTC, Amber NetCDF) and different trajectory sizes are benchmarked on different high performance computing (HPC) resources.
Different storages like solid state drives (SSDs), hard disk drives (HDDs) and Lustre file system are also tested to examine effect of storage location on the performance.
The benchmarks are performed both on a single node and across multiple nodes using multiprocessing and distributed schedulers in Dask library.
Overall, our results show strong dependency to hardware and file formats.
On a single node we found multiprocessing scheduler to provide slightly better scaling than distributed scheduler on multiple nodes.
According to our results, although Map-Reduce job is pleasantly parallel and all processors have the same amount of work to do, some of the processes are much slower than the others in some tests.
We hypothesize that weak performance gains from distributed scheduler is likely due to contention on the network that may slow down individual tasks and lead to overall waits and poor load balancing.
All in all, obtaining good parallel performance with a Map-Reduce approach for trajectory analysis is strongly dependent on efficient transfer of trajectory data to memory.
Present study provides guidelines for how the choice of trajectory format along with the hardware can lead to good performance.
At the end, we also suggest the promising approaches that can be done to get the best possible performance out of MDAnalysis library.


.. class:: keywords

   MDAnalysis, High Performance Computing, Dask, Map-Reduce job, File formats


The draft of the report including all data is available on figshare at DOI
[10.6084/m9.figshare.4695742][]; the report will be updated as necessary, which
will be recorded in the history on figshare.

.. class:: Data files

The topology file (PSF format) and the trajectory (DCD) used for the benchmark
can be downloaded from dropbox

* [adk4AKE.psf][]
* [1ake_007-nowater-core-dt240ps.dcd][]

Files in XTC and NetCDF formats are generated from the DCD.

.. class:: Tested libraries

* [MDAnalysis][] 0.15.0
* [Dask][] 0.12.0 (also 0.13.0)
* [Distributed][] 1.14.3 (also 1.15.1)
* [NumPy][] 1.11.2 (also 1.12.0)

.. class:: Comments and Questions

Please raise issues in the [issue tracker][] or ask on the
[MDAnalysis developer mailing list][].


.. class:: References

[Khoshlessan2017]: #Khoshlessan2017
<a name="Khoshlessan2017">Khoshlessan, Mahzad; Beckstein, Oliver
(2017)</a>: _Parallel analysis in the MDAnalysis Library: Benchmark of
Trajectory File Formats._ figshare. doi:[10.6084/m9.figshare.4695742][]


[MDAnalysis]: http://mdanalysis.org
[Dask]: http://dask.pydata.org
[Distributed]: https://distributed.readthedocs.io/
[NumPy]: http://numpy.scipy.org/
[issue tracker]: https://github.com/Becksteinlab/Parallel-analysis-in-the-MDAnalysis-Library/issues
[MDAnalysis developer mailing list]: http://developers.mdanalysis.org/
[10.6084/m9.figshare.4695742]: https://doi.org/10.6084/m9.figshare.4695742
[adk4AKE.psf]:    https://www.dropbox.com/sh/ln0klc9j7mhvxkg/AAAL5eP1vrn0tK-67qVDnKeua/Trajectories/equilibrium/adk4AKE.psf
[1ake_007-nowater-core-dt240ps.dcd]: https://www.dropbox.com/sh/ln0klc9j7mhvxkg/AABSaNJ0fRFgY1UfxIH_jWtka/Trajectories/equilibrium/1ake_007-nowater-core-dt240ps.dcd
